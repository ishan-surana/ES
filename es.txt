LED
#include<lpc17xx.h>

int i,j,n=0,d;
int main(){
	SystemInit();
	SystemCoreClockUpdate();
	LPC_PINCON->PINSEL0=0;
	LPC_GPIO0->FIODIR|=(0xFF<<4); //output for leds
	while(1){
		LPC_GPIO0->FIOPIN=(n%256)<<4;
		n++;
		for(d=0;d<10000;d++); //delay
	}
}

---------------------------------------------------------------------------------------------------------

SEVEN SEGMENT UPDOWN SWITCH
#include<lpc17xx.h>

int sevseg[10]={0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
int i,j,d,n,number=0,flag=0,count=0;
void delay(){
	for(d=0;d<10000;d++);
	count++;
	if(count==500){
		flag=1;
		count=0;
	}
	else{
		flag=0;
	}
}

int main(){
	SystemInit();
	SystemCoreClockUpdate();
	LPC_PINCON->PINSEL0=0;
	LPC_GPIO0->FIODIR=(0XFF<<4);
	LPC_PINCON->PINSEL3=0;
	LPC_GPIO1->FIODIR=(0XF<<23);
	while(1){
		n=number;
		for(i=0;i<4;i++){
			LPC_GPIO1->FIOPIN=(i<<23);
			LPC_GPIO0->FIOPIN=sevseg[n%10]<<4;
			n/=10;
			for(d=0;d<1000;d++);
		}
		delay();
		if(flag){
			x=LPC_GPIO2->FIOPIN & 0X1<<12;
			if(x){ //switch pressed, upcount
				number++;
			}
			else{ //switch not pressed, downcount
				number--;
			}
		}
	}
}

----------------------------------------------------------------------------------------------------------

SEVEN SEGMENT MATRIX
#include<lpc17xx.h>
 
int keyboard[][10]={{0x3F, 0x06, 0x5B, 0x4F},{0x66, 0x6D, 0x7D, 0x07},{0x7F, 0x6F,0x5B, 0x4F},{0x66, 0x6D, 0x7D, 0x07}};
int row,col,i,x;
unsigned long int a;
int main(){
    SystemInit();
    SystemCoreClockUpdate();
    LPC_PINCON->PINSEL0=0; //DATA 0.4 TO 0.11
	LPC_PINCON->PINSEL1=0;//DECODER 0.23 TO 0.26
    LPC_PINCON->PINSEL3=0;//KEYBOARD COLUMN 1.23 TO 1.26
    LPC_PINCON->PINSEL4=0;// KEYBOARD ROWS 2.10 to 2.13
    LPC_GPIO0->FIODIR=0XFF<<4 | 0XF<<23;  
    LPC_GPIO1->FIODIR=0; //col input
    LPC_GPIO2->FIODIR=0XF<<(10); //row output
    LPC_GPIO0->FIOPIN=0<<23|keyboard[0][0]<<4;
    //LPC_GPIO0->FIOPIN|=keyboard[0][0]<<4;
   
    while(1){
		for(row=0;row<4;row++){
			LPC_GPIO2->FIOPIN=1<<(10+row);
			x = LPC_GPIO1->FIOPIN>>23 & 0Xf;
			if(x){
				if(x==1) col=0;
				if(x==2) col=1;
				if(x==4) col=2;
				if(x==8) col=3;
				a=keyboard[row][col];   
			}
			for(i=0;i<500000;i++);
    	}
        LPC_GPIO0->FIOPIN|=1<<23;
        LPC_GPIO0->FIOMASK=0XFFFFF00F;
        LPC_GPIO0->FIOPIN=a<<4;
    }
}

-----------------------------------------------------------------------------------------------------------

LCD
#include <lpc17xx.h>
#define RS  27 //P0.27
#define EN  28  //P0.28
#define DT  23  //P0.23 to P0.26 data lines

 unsigned long int temp1=0, temp2=0,i,j ;
 unsigned char flag1 =0, flag2 =0;
 unsigned char msg[] = {" Department of ICT MIT manipal"};
 
void lcd_write(void);
void port_write(void);
void delay_lcd(unsigned int);
unsigned long int init_command[] = {0x30,0x30,0x30,0x20,0x28,0x0c,0x06,0x01,0xC0};
int main(void)
 {
	SystemInit();
	SystemCoreClockUpdate();
                  LPC_GPIO0->FIODIR = 1<<RS|1<<EN|0XF<<DT;
                   flag1 =0;	
	 for (i=0; i<9;i++)  
                    {	 
	    temp1 = init_command[i];
    	    lcd_write();
                    }
                   flag1 =1;
	i =0;
	while (msg[i] != '\0')
                     {
                      temp1 = msg[i];
                      lcd_write();
		      i+= 1;
											 if(i==16)  //check for 1 charactres in first line
											 {
												 flag1=0;  //if yes 
												 temp1=0xc0; //configure second line in command register
												 lcd_write();
												 flag1=1;
											 }
                     }
	while(1);
 }

  void lcd_write(void)
                 {
	          flag2 =  (flag1 == 1) ? 0 :((temp1 == 0x30) || (temp1 == 0x20)) ? 1 : 0;
                  temp2 = temp1 & 0xf0;//move data (26-8+1) times : 26 - HN place, 4 - Bits
									 temp2=temp2>>4;
	temp2 = temp2 << DT;//data lines from 23 to 26
	port_write();
                  if (!flag2)
                    {
	   temp2 = temp1 & 0x0f; //26-4+1
	   temp2 = temp2 << DT; 
	   port_write();
                   }
                 }

 
 void port_write(void)                        
 { 	 
	LPC_GPIO0->FIOPIN = 0;
	LPC_GPIO0->FIOPIN = temp2;	
          if (flag1 == 0)	   
                  LPC_GPIO0->FIOCLR = 1<<RS;
          else
                  	LPC_GPIO0->FIOSET = 1<<RS; 
	
	LPC_GPIO0->FIOSET = 1<<EN;   	
	delay_lcd(25);
	LPC_GPIO0->FIOCLR = 1<<EN;
                  delay_lcd(30000);		 		
  
  }

void delay_lcd(unsigned int r1)
 {
  	unsigned int r;
  	for(r=0;r<r1;r++);
	 
    return;
 }

----------------------------------------------------------------------------------------------------------

LCD KEYBOARD
#include<LPC17xx.h>

 unsigned char col, row, var, flag, key, *ptr;

 int i, j, flag1, temp2, temp1, x;

 unsigned char message[4][4] = {{'1', '2', '3', '4'}, {'D', 'E', 'F', '0'},{'9', 'A', 'B', 'C'},{'5', '6', '7', '8'}};

 void port_write(){

 		//LPC_GPIO0->FIOPIN = flag1 << 27;

 		LPC_GPIO0->FIOPIN = temp2<<23;

 		if(flag1==0)

 			LPC_GPIO0->FIOCLR = 1<<27; //RS command

 		else

 			LPC_GPIO0->FIOSET = 1<<27; //RS data

 		 //sending command/data
 
		LPC_GPIO0->FIOSET = 1<<28;

 		for(i=0;i<50;i++);

 		LPC_GPIO0->FIOCLR = 1<<28;

 		for(i=0;i<500;i++);

 }
 
void lcd_write(){

 		temp2 = temp1 & 0xF0;

 		temp2 = temp2>>4;

 		port_write();

 		temp2 = (temp1 & 0x0F);

 		port_write();

 }
 
int main(void){

 	int command[] = {3, 3, 3, 2, 0x28, 0x01, 0x06, 0x0C, 0x80};

 	SystemInit();

 	SystemCoreClockUpdate();
 
	LPC_PINCON->PINSEL3 = 0xF<<23|0xF<<10;

 	LPC_GPIO2->FIODIR |= 0x00003C00;

 	LPC_GPIO1->FIODIR &= 0xF87FFFFF;
 
 
	LPC_PINCON->PINSEL1 = 0;

 	LPC_GPIO0->FIODIR = 0x3F<<23;
 
 
		flag1=0;

 		for(j=0;j<9;j++){

 			temp1=command[j];

 			lcd_write();

 		}
 
		flag1 = 1;

 		j = 0;
 
	while(1){

 	for(row=0;row<4;row++){	

 		LPC_GPIO2 -> FIOPIN = 1<<(10+row);

 		x = (LPC_GPIO1->FIOPIN >> 23)&0xF;

 		if(x){

 					if(x==1)

 						col = 0;

 					else if(x==2)

 						col = 1;

 					else if(x==4)

 						col = 2;

 					else if(x==8)

 						col = 3;

 					temp1 = message[row][col];

 					lcd_write();

 					for(i = 0;i<2000000;i++);

 				}

 			}
 
	}
 
} 

----------------------------------------------------------------------------------------------------------

ADC
 #include <lpc17xx.h>

 #include <math.h>

 #include <stdio.h>

 #define RS_CTRL  0x08000000  //P0.27, 1<<27

 #define EN_CTRL  0x10000000  //P0.28, 1<<28

 #define DT_CTRL  0x07800000  //P0.23 to P0.26 data lines, F<<23

 unsigned long int temp1=0, temp2=0,i,j,r;

 unsigned char flag1 =0, flag2 =0;

 unsigned char msg[] = {"VOLTAGE DIFF"};

 	char diff[16];

 int digital_op4,digital_op5;

 float analog_eq4,analog_eq5,analog_diff;

void lcd_write(void);

 void port_write(void);

 void delay_lcd(unsigned int);

 unsigned long int init_command[] = {0x30,0x30,0x30,0x20,0x28,0x01 ,0x06,0x0c,0x80};

 int main(void)

 {

 	SystemInit();

 	SystemCoreClockUpdate();

 	LPC_PINCON->PINSEL1=0;

   LPC_GPIO0->FIODIR = DT_CTRL | RS_CTRL | EN_CTRL; //0xf<<23 | 1<<27 | 1<<28;

   flag1 =0;

 	for (i=0; i<9;i++)

                     {

 	    temp1 = init_command[i];

     	    lcd_write();

                     }

   flag1 =1; //DATA MODE

 	for(i=0;msg[i]!='\0';i++){

     temp1=msg[i];

     lcd_write();

   }

 	LPC_SC->PCONP = (1<<15);

 	LPC_SC->PCONP |=1<<12;

 	LPC_PINCON->PINSEL3=3<<30 | 3<<28;

	while(1){

     LPC_ADC->ADCR=1<<4 | 1<<21 | 1<<24;

 		while(!(LPC_ADC->ADDR4>>31 & 0X1));

 		digital_op4=(LPC_ADC->ADDR4>>4) & 0XFFF;

 		analog_eq4=(float)digital_op4*(3.3/pow(2,12));

 		LPC_ADC->ADCR=1<<5 | 1<<21 | 1<<24;

 		while(!(LPC_ADC->ADDR5>>31 & 0X1));

 		digital_op5=(LPC_ADC->ADDR5>>4) & 0XFFF;

 		analog_eq5=(float)digital_op5*(3.3/pow(2,12));

 		analog_diff=analog_eq4-analog_eq5;

 		sprintf(diff,"%3.2fV",analog_diff);

 		flag1=0;

 		temp1=0xC0;

 		lcd_write();

 		flag1=1;

 		for(i=0;diff[i]!='\0';i++){

 			temp1=diff[i];

 			lcd_write();

   }

 	for(i=0;i<2000000;i++);

 }

 }

  void lcd_write(void)

                  { 

                   temp2 = temp1 & 0xf0;// 4 - Bits to get it to least significant digit place

 	temp2 = temp2>>4;

 	port_write();

                  if (!((flag1==0)&&((temp1==0x20)||(temp1==0x30)))) //send least significant 4 bits only when it is data/command other than 0x30/0x20

                   {

 	   temp2 = temp1 & 0x0f; 

 	   temp2 = temp2 ;

 	   port_write();

                    }

                  }


void port_write(void)

{

 	LPC_GPIO0->FIOPIN = temp2<<23; // sending the ascii code

           if (flag1 == 0)

                   LPC_GPIO0->FIOCLR = RS_CTRL; // if command

           else

                   	LPC_GPIO0->FIOSET = RS_CTRL; //if data

	LPC_GPIO0->FIOSET = EN_CTRL; //sending a low high edge on enable input

 	for(r=0;r<25;r++);

 	LPC_GPIO0->FIOCLR = EN_CTRL;

     for(r=0;r<30000;r++);

   }

---------------------------------------------------------------------------------------------------------

PWM
#include<LPC17xx.h>

void initpwm(void);
void updatepulsewidth(unsigned int pulsewidth);
void delayms(unsigned int milliseconds);
int scan(void);
unsigned int temp3;
int pulsewidth[]={0,2500,5000,10000};
int dir=0;

int main(void)
{
	LPC_GPIO0->FIODIR = 0xf00;
	initpwm();
	while(1)
	{
		int count=scan();
		if(count==0x1)
			updatepulsewidth(pulsewidth[0]);
		else if(count==0x2)
			updatepulsewidth(pulsewidth[1]);
		else if(count==0x4)
			updatepulsewidth(pulsewidth[2]);
		else if(count==0x8)
			updatepulsewidth(pulsewidth[3]);
		delayms(100000);
	}

}

void initpwm(void)
{
	LPC_PINCON->PINSEL3|=0x8000;
	LPC_PWM1->PCR=0x1000;
	LPC_PWM1->PR=0;
	LPC_PWM1->MR0=10000;
	LPC_PWM1->MCR=2;
	LPC_PWM1->LER=0xff;
	LPC_PWM1->TCR=0x2;
	LPC_PWM1->TCR=0x9;
}

void updatepulsewidth(unsigned int pulsewidth)
{
	LPC_PWM1->MR4=pulsewidth;
	LPC_PWM1->LER=0xff;
}

void delayms(unsigned int milliseconds)
{
	LPC_TIM0->CTCR=0x0;
	LPC_TIM0->PR=2;
	LPC_TIM0->TCR=0x02;
	LPC_TIM0->TCR=0x1;
	while(LPC_TIM0->TC<milliseconds);
	LPC_TIM0->TCR=0;
}

int scan(void)
{
	LPC_GPIO0->FIOSET = 0x100;
	temp3 = LPC_GPIO0->FIOPIN;
	temp3 &= 0xf0;
	if(temp3!=0)
		return temp3>>4;
	return 1;
}


STEPPER MOTOR

#include <LPC17xx.H>

 void clock_wise(void);

 void anti_clock_wise(void);

 unsigned long int var1,var2;

 unsigned int i=0,j=0,k=0;

 int main(void)

 {

 SystemInit();

 SystemCoreClockUpdate();

 LPC_PINCON->PINSEL0 = 0xFFFF00FF; //P0.4 to P0.7 GPIo

 LPC_GPIO0->FIODIR = 0x000000F0; //P0.4 to P0.7 output

 while(1)

 {

 for(j=0;j<50;j++) // 20 times in Clock wise Rotation

 clock_wise();

 for(k=0;k<65000;k++); // Delay to show clock Rotation

 } // End of while(1)

 } // End of main

 void clock_wise(void)

 {

 var1 = 0x00000008; //For Clockwise

 for(i=0;i<=3;i++) // for A B C D Stepping

 {

 var1 = var1<<1; //For Clockwise

 var2 = ~var1;

 var2 = var2 & 0x000000F0;

 LPC_GPIO0->FIOPIN = ~var1;

 //LPC_GPIO0->FIOSET = var1;

 //LPC_GPIO0->FIOCLR = var2;

 for(k=0;k<60000;k++); //for step speed variation

 }

 }
